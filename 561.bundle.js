"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[561],{561:(e,s,t)=>{t.r(s),t.d(s,{KeepAwakeWeb:()=>a});var r=t(895);class a extends r.Uw{constructor(){super(...arguments),this.wakeLock=null,this._isSupported="wakeLock"in navigator}async keepAwake(){this._isSupported||this.throwUnsupportedError(),this.wakeLock&&await this.allowSleep(),this.wakeLock=await navigator.wakeLock.request("screen")}async allowSleep(){var e;this._isSupported||this.throwUnsupportedError(),null===(e=this.wakeLock)||void 0===e||e.release(),this.wakeLock=null}async isSupported(){return{isSupported:this._isSupported}}async isKeptAwake(){this._isSupported||this.throwUnsupportedError();return{isKeptAwake:!!this.wakeLock}}throwUnsupportedError(){throw this.unavailable("Screen Wake Lock API not available in this browser.")}}}}]);